# Generated by RIDLC, make sure to backup before recompile
# ridlc -spf -O . ../../../../examples/iftest.ridl 
import sys
from rpcf import iolib
from rpcf import serijson
import errno
from rpcf.proxy import ErrorCode as Err
from typing import Union, Tuple, Optional
from ifteststructs import *
from ifimpl import *
import os
import time
import threading
import select
from IfTestcli import CIfTestProxy
from pprint import pprint

def Usage() :
    print( "Usage: python3 maincli.py < SP1 Path > < SP2 Path >..." )
    print( "\t< SP1 path > is the path to the first service's service point. The order" )
    print( "\tof the < SP path > is the same as services declared in the ridl file" )
    
def maincli() :
    ret = 0
    error = 0
    oMsgThrd = None
    try:
        if len( sys.argv ) < 2 :
            Usage()
            return -errno.EINVAL
        num = 0
        if len( sys.argv ) >= 3 :
            num = int( sys.argv[ 2 ] )
        '''
        Note: this is a reference design
        you are encouraged to make changes
        for your own purpse
        '''
        
        print( "Start to work here..." )
        strSvcPt = sys.argv[ 1 ]
        oProxy = CIfTestProxy(
            strSvcPt, num )
        
        reqId = 0x12345 + num * 0x100000

        i0 = GlobalFeatureList()
        i0.extendUserFeature = dict()
        i0.extendUserFeature[2] = "extendUserFeature"
        i0.userFeature = dict()
        i0.userFeature[1] = "userFeature"
        i0.userOnlineFeature = dict()
        i0.userOnlineFeature["hello"] = "userOnlineFeature"
        i0.userHistoricalStatisticsFeature = dict()
        i0.userHistoricalStatisticsFeature[3] = 5
        i0.sceneFeature = dict()
        i0.sceneFeature[6] = "sceneFeature"
        i0.formL24Exposure = dict()
        i0.formL24Exposure["formL24Exposure"] = 7
        i0.industryL24Exposure = dict()
        i0.industryL24Exposure["industryL24Exposure"] = 8
        i0.flightId = "sz2680"
        i0.requestId = "haha9527"
        i0.time = 23456
        i0.flag = 9
        i0.body = [ GlobalFeature(), GlobalFeature()]
        i0.body[0].adFeature = dict()
        i0.body[0].adFeature[11] = "adFeature"
        i0.body[0].extendAdFeature = dict()
        i0.body[0].extendAdFeature[11] = "extendAdFeature"
        i0.body[0].extendAdFeature[14] = "extendAdFeature2"
        i0.body[0].adHistoricalStatisticsFeature = dict()
        i0.body[0].adHistoricalStatisticsFeature[12] = 13
        i0.body[0].adHistoricalStatisticsFeature[39] = 50
        i0.body[0].userRealtimeStatisticsFeature = dict()
        i0.body[0].userRealtimeStatisticsFeature[14] = 15
        i0.body[0].userRealtimeStatisticsFeature[29] = 33
        i0.body[0].extenduserRealtimeStatisticsFeature = dict()
        i0.body[0].extenduserRealtimeStatisticsFeature[16] = 17
        i0.body[0].extenduserRealtimeStatisticsFeature[22] = 22
        i0.body[0].adRealtimeStatisticsFeature = dict() 
        i0.body[0].adRealtimeStatisticsFeature[18] = 19
        i0.body[0].adRealtimeStatisticsFeature[38] = 39
        i0.body[0].adFormId = "bobo";
        i0.body[0].materialId = "steel";
        i0.body[0].creativeId = "cici";
        i0.body[0].sponsorId = "dudu";
        i0.body[1].adFeature = dict()
        i0.body[1].adFeature[11] = "adFeature"
        i0.body[1].extendAdFeature = dict()
        i0.body[1].extendAdFeature[11] = "extendAdFeature"
        i0.body[1].adHistoricalStatisticsFeature = dict()
        i0.body[1].adHistoricalStatisticsFeature[12] = 13
        i0.body[1].adHistoricalStatisticsFeature[22] = 23
        i0.body[1].userRealtimeStatisticsFeature = dict()
        i0.body[1].userRealtimeStatisticsFeature[14] = 15
        i0.body[1].userRealtimeStatisticsFeature[24] = 25
        i0.body[1].extenduserRealtimeStatisticsFeature = dict()
        i0.body[1].extenduserRealtimeStatisticsFeature[16] = 17
        i0.body[1].extenduserRealtimeStatisticsFeature[26] = 27
        i0.body[1].adRealtimeStatisticsFeature = dict()
        i0.body[1].adRealtimeStatisticsFeature[18] = 19
        i0.body[1].adRealtimeStatisticsFeature[28] = 29
        i0.body[1].adFormId = "foofoo"
        i0.body[1].materialId = "plastic"
        i0.body[1].creativeId = "giogio"
        i0.body[1].sponsorId = "jojo"

        ret = oProxy.Echo( reqId, i0 )
        if ret[ 0 ] < 0 :
            print( "Echo failed with error %d" % ret[0] )
            return ret[0]
        i0r = ret[ 1 ][0]
        pprint(vars( i0r ))
        pprint(vars(i0r.body[0]))
        pprint(vars(i0r.body[1]))

    except Exception as err:
        print( err )
        if error < 0 :
            return error
        return -errno.EFAULT
    finally:
        if oMsgThrd is not None:
            oMsgThrd.SetExit()
            threading.Thread.join( oMsgThrd )
    return ret
    
ret = maincli()
quit( ret )
