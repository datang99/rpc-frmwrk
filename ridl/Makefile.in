include ../Makefile.init.pub

TARGET_IMG:=ridlc

C_INCLUDE += -I$(BASE)/ipc

TARGET:=$(OUTPUT_DIR)/$(TARGET_IMG)
RIDLC_OBJ:= ridlc.o

BISON_SRC:= ridlc.cpp
SOURCES:=$(BISON_SRC) lexer.cpp seribase.cpp gencpp.cpp
OBJS2:=$(SOURCES:%.cpp=$(OBJ_DIR)/%.o)

all: $(TARGET)
debug: $(TARGET)
release: $(TARGET)

clean: debug_clean release_clean

debug_clean: do_clean
release_clean: do_clean

$(TARGET):$(OBJS2)

$(OBJS2):$(SOURCES)

lexer.cpp: ridlc.lex ridlc.h
	flex ridlc.lex

ridlc.h: ridlc.y
	bison --defines=ridlc.h --output=ridlc.cpp -r all ridlc.y

do_clean:
	-@rm ridlc.cpp ridlc.h lexer.cpp lexer.h
	-@rm $(OBJ_DIR)/*.d $(MUTE_CLEAN)
	-@rm $(OUTPUT_DIR)/$(TARGET_IMG) $(MUTE_CLEAN)
	-@rm $(SOURCES:%.cpp=$(OBJ_DIR)/%.o) $(MUTE_CLEAN)
	-@rm $(OBJ_DIR)/$(RIDLC_OBJ) $(MUTE_CLEAN)

-include $(OBJS2:%.o=%.d)

$(OUTPUT_DIR)/$(TARGET_IMG) : $(OBJS2)
	@if [ ! -d $(OUTPUT_DIR) ]; then mkdir -p $(OUTPUT_DIR);fi
	$(CC) -o $@ $(OBJS2) -lipc -lcombase -lutils $(LINKER_OPTION) -L$(OUTPUT_DIR) -ldl

.PHONY: sync TARGET clean debug_clean release_clean do_clean
