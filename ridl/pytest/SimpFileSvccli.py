#Generated by RIDLC, make sure to backup if there are important changes
from rpcf.rpcbase import *
from rpcf.proxy import PyRpcServices, ErrorCode
from seribase import CSerialBase
import errno

from rpcf.proxy import PyRpcProxy, OutputMsg
from SimpFileSvcclibase import *
class CITinyInterfacecli( IITinyInterface_CliImpl ):

    '''
    Asynchronous callback to receive the 
    request status, and reponse parameters
    if any. And add code here to process the
    request response
    '''
    def KAReq2Cb( self,
        context : object, ret : int ):

        OutputMsg( ( "KAReq2Cb: context is %d, ret is %d " % context,ret ) );
    
class CIEchoThingscli( IIEchoThings_CliImpl ):

    '''
    Event handler
    Add code here to process the event
    '''
    def OnHelloWorld( self,
        strMsg : str
        ) :
        OutputMsg( strMsg )
        return
        
    
class CSimpFileSvcProxy(
    CITinyInterfacecli,
    CIEchoThingscli,
    PyRpcProxy ) :
    def __init__( self, pIoMgr, strDesc, strObjName ) :
        PyRpcProxy.__init__( self,
            pIoMgr, strDesc, strObjName )
