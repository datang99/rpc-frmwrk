// GENERATED BY RIDLC. MAKE SURE TO BACKUP BEFORE RE-COMPILING.
package org.rpcf.tests.katest;
import org.rpcf.rpcbase.*;
import java.util.Map;
import java.util.HashMap;
import java.lang.String;
import java.nio.ByteBuffer;

import java.util.concurrent.TimeUnit;
public class maincli
{
    public static JavaRpcContext m_oCtx;
    public static void main( String[] args )
    {
        m_oCtx = JavaRpcContext.createProxy(); 
        if( m_oCtx == null )
            System.exit( -RC.EFAULT );
        
        // create the service object
        KeepAlivecli oSvcCli = new KeepAlivecli(
            m_oCtx.getIoMgr(), 
            "./katestdesc.json",
            "KeepAlive" );

        // check if there are errors
        if( RC.ERROR( oSvcCli.getError() ) )
            System.exit( oSvcCli.getError() );
        
        // start the proxy
        int ret = oSvcCli.start();
        if( RC.ERROR( ret ) )
            System.exit( ret );
        
        do{
            // test remote server is not online
            while( oSvcCli.getState() == RC.stateRecovery )
            try{
                TimeUnit.SECONDS.sleep(1);
            }
            catch( InterruptedException e ){};
            
            if( oSvcCli.getState() != RC.stateConnected )
            { ret = RC.ERROR_STATE;break;}

            // request something from the server
            String i0 = "hello, katest";
            JRetVal jret = oSvcCli.LongWait(
                    i0 );
            if( jret.ERROR() )
            {
                rpcbase.JavaOutputMsg(
                        "LongWait failed with error " + jret.getError());
                ret = jret.getError();
                break;
            }
            else
            {
                String i0r = (String)jret.getAt(0);
                rpcbase.JavaOutputMsg(
                        "LongWait completed with response " + i0r);
                ret = 0;
                break;

            }
            
        }while( false );

        oSvcCli.stop();
        m_oCtx.stop();
        System.exit( ret );
    }
}