// GENERATED BY RIDLC. MAKE SURE TO BACKUP BEFORE RE-COMPILING.
package org.rpcf.tests.stmtest;
import org.rpcf.rpcbase.*;

import java.nio.charset.StandardCharsets;
import java.util.Map;
import java.util.HashMap;
import java.lang.String;
import java.nio.ByteBuffer;
import java.util.concurrent.Semaphore;

public class StreamTestcli extends StreamTestclibase
{
    public Semaphore m_sem = new Semaphore(0);
    public StreamTestcli( ObjPtr pIoMgr,
        String strDesc, String strSvrObj )
    { super( pIoMgr, strDesc, strSvrObj ); }
    
    public void onReadStreamComplete(
            int iRet, long hChannel, byte[] buf)
    {
        if(RC.ERROR(iRet))
        {
            rpcbase.JavaOutputMsg(
                    "readStreamAsync failed with error " + iRet);
        }
        else
        {
            rpcbase.JavaOutputMsg(
                    "Server says( async ): " + new String(buf, StandardCharsets.UTF_8));
        }
        setError(iRet);
        m_sem.release();
    }
    public void onWriteStreamComplete(
            int iRet, long hChannel, byte[] buf)
    {
        if(RC.ERROR(iRet))
        {
            rpcbase.JavaOutputMsg(
                    "writeStreamAsync failed with error " + iRet);
        }
        setError(iRet);
        m_sem.release();
    }

}