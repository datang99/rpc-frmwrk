// GENERATED BY RIDLC. MAKE SURE TO BACKUP BEFORE RE-COMPILING.
package org.rpcf.tests.evtest;

import org.rpcf.rpcbase.JavaRpcContext;
import org.rpcf.rpcbase.RC;

import java.util.concurrent.TimeUnit;
public class mainsvr
{
    public static JavaRpcContext m_oCtx;
    public static void main( String[] args )
    {
        m_oCtx = JavaRpcContext.createServer(); 
        if( m_oCtx == null )
            System.exit( -RC.EFAULT );
        
        // create the service object
        EventTestsvr oSvcSvr = new EventTestsvr(
            m_oCtx.getIoMgr(), 
            "./evtestdesc.json",
            "EventTest" );

        // check if there are errors
        if( RC.ERROR( oSvcSvr.getError() ) )
            System.exit( oSvcSvr.getError() );
        
        int ret = oSvcSvr.start();
        if( RC.ERROR( ret ) )
            System.exit( ret );
        
        do{
        try{
            // replace 'sleep()' with your favorite
            // waiting logic if necessary. The requests
            // handling is going on in the background
            TimeUnit.SECONDS.sleep(3);
            if( oSvcSvr.getState() != RC.stateConnected )
                break;
            oSvcSvr.OnHelloWorld(
                    null,"hello, evtest");
        }
        catch( InterruptedException e ){}
        }while( true );

        oSvcSvr.stop();
        m_oCtx.stop();
        System.exit( ret );
    }
}