#Generated by RIDLC, make sure to backup before running RIDLC again
from typing import Tuple
from rpcf.rpcbase import *
from rpcf.proxy import *
from seribase import CSerialBase
from kateststructs import *
import errno

from KeepAlivecli import CKeepAliveProxy
import os
import time


def maincli() :
    ret = 0
    oContext = PyRpcContext( 'PyRpcProxy' )
    with oContext :
        print( "start to work here..." )
        strPath_ = os.path.dirname( os.path.realpath( __file__ ) )
        strPath_ += '/katestdesc.json'
        oProxy = CKeepAliveProxy( oContext.pIoMgr,
            strPath_, 'KeepAlive' )
        ret = oProxy.GetError()
        if ret < 0 :
            return ret
        
        with oProxy :
            state = oProxy.oInst.GetState()
            while state == cpp.stateRecovery :
                time.sleep( 1 )
                state = oProxy.oInst.GetState()
            if state != cpp.stateConnected :
                return ErrorCode.ERROR_STATE

            i0 = "hello, katest!"
            pret = oProxy.LongWait( i0 )
            ret = pret[ 0 ]
            if ret < 0 :
                print( "LongWait failed with error " + str( ret ) )
            else :
                i0r = pret[ 1 ][ 0 ]
                print( "LongWait completed with response " + i0r )

        oProxy = None
    oContext = None
    return ret
    
ret = maincli()
quit( -ret )
