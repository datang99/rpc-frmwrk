#Generated by RIDLC, make sure to backup before running RIDLC again
from typing import Tuple
from rpcf.rpcbase import *
from rpcf.proxy import *
from seribase import CSerialBase
from HelloWorldstructs import *
import errno

from HelloWorldSvccli import CHelloWorldSvcProxy
import os


def maincli() :
    ret = 0
    oContext = PyRpcContext( 'PyRpcProxy' )
    with oContext :
        print( "start to work here..." )
        strPath_ = os.path.dirname( os.path.realpath( __file__ ) )
        strPath_ += '/HelloWorlddesc.json'
        oProxy = CHelloWorldSvcProxy( oContext.pIoMgr,
            strPath_, 'HelloWorldSvc' )
        ret = oProxy.GetError()
        if ret < 0 :
            return ret
        
        with oProxy :
            '''
            adding your code here
            Calling a proxy method like
            '''
            pret = oProxy.Echo( "Hello, Server" )
            if pret[ 0 ] < 0 :
                print( "Echo failed with error " + pret[0] )
                return pret[0]
            strResp = pret[1][0]
            print( "Server replys '" + strResp + "'")
            
    return ret
    
ret = maincli()
quit( ret )
