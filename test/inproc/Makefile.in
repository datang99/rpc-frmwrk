include ../Makefile.init.pub

TARGET_SVR:=inproctst
CLASS_LIB:=libinproc.so
CLASS_LINK:=inproc

TARGET:=$(OUTPUT_DIR)/$(TARGET_SVR)
OBJS_SVR:= inproctst.o

SOURCES:= inprocsvr.cpp inprocli.cpp
OBJS2:=$(SOURCES:%.cpp=$(OBJ_DIR)/%.o)

all: $(TARGET) link_json
debug: $(TARGET) link_json
release: $(TARGET) link_json

clean:
	make debug_clean
	make release_clean

debug_clean: do_clean
release_clean: do_clean

do_clean:
	-@rm $(OBJ_DIR)/*.d $(MUTE_CLEAN)
	-@rm $(OUTPUT_DIR)/$(TARGET_SVR) $(MUTE_CLEAN)
	-@rm $(OUTPUT_DIR)/$(CLASS_LIB) $(MUTE_CLEAN)
	-@rm $(SOURCES:%.cpp=$(OBJ_DIR)/%.o) $(MUTE_CLEAN)
	-@rm $(OBJ_DIR)/$(OBJS_SVR) $(MUTE_CLEAN)

link_json:
	@if [ ! -e $(OUTPUT_DIR)/inproc.json ]; then pushd $(OUTPUT_DIR);ln -s ../inproc/inproc.json;popd;fi

-include $(OBJS2:%.o=%.d) $(OBJS_SVR:%.o=(OBJ_DIR)/%.d)

$(OUTPUT_DIR)/$(TARGET_SVR) : $(OUTPUT_DIR)/$(CLASS_LIB) $(OBJ_DIR)/$(OBJS_SVR)
	@if [ ! -d $(OUTPUT_DIR) ]; then mkdir -p $(OUTPUT_DIR);fi
	$(CC) -o $@ $(LINKER_OPTION) -l$(CLASS_LINK) $(OBJ_DIR)/$(OBJS_SVR)

$(OUTPUT_DIR)/$(CLASS_LIB) : $(OBJS2)
	@if [ ! -d $(OUTPUT_DIR) ]; then mkdir -p $(OUTPUT_DIR);fi
	$(CC) -o $@ $(LINKER_OPTION) -shared $(OBJS2)


$(OBJ_DIR)/inproctst.o : inproctst.cpp
	@echo Building file: $@
	$(CPP) $(C_DEFINES) $(C_FLAGS) $(CPP_FLAGS) $(C_INCLUDE) -o $@ $(CUR_DIR)/$<
	@$(CPP) $(C_DEFINES) $(C_FLAGS) $(CPP_FLAGS) $(C_INCLUDE) -MM $< > $@.d
	@mv -f $@.d $@.tmp
	@sed -e 's|.*:|$*.o:|' < $@.tmp > $@.d
	@sed -e 's/.*://' -e 's/\\$$//' < $@.tmp | fmt -1 | sed -e 's/^ *//' -e 's/$$/:/' >> $@.d
	@mv -f $@.d $*.d
	@rm -f $@.tmp

.PHONY: sync TARGET clean
