include ../Makefile.init.pub
C_INCLUDE += -I../ipc

TARGET:=librpc.so
SOURCES:= dbusprxy.cpp prxyfdo.cpp fdodrv.cpp \
	tcpport.cpp stmpdo.cpp tcpfido.cpp reqfwdr.cpp \
	rpcroute.cpp bridge.cpp dllexp.cpp \
	fidodrv.cpp stmrelay.cpp tcportex.cpp stmpdo2.cpp \
	multihop.cpp streammh.cpp

OBJS:=$(SOURCES:%.cpp=$(OBJ_DIR)/%.o)
C_DEFINES += -D_USE_LIBEV=1

all: $(OUTPUT_DIR)/$(TARGET) SSLPort WSPort
debug: $(OUTPUT_DIR)/$(TARGET) SSLPort WSPort
release: $(OUTPUT_DIR)/$(TARGET) SSLPort WSPort

$(OUTPUT_DIR)/$(TARGET) : $(OBJS)
	@if [ ! -d $(OUTPUT_DIR) ]; then mkdir -p $(OUTPUT_DIR);fi
	$(CC) -o $(OUTPUT_DIR)/$(TARGET) $(LINKER_OPTION) $(OBJS)

SSLPort:
	make -C ./sslport

WSPort:
	make -C ./wsport

-include $(OBJS:%.o=%.d)

debug_clean: do_clean
release_clean: do_clean

clean:
	make debug_clean
	make release_clean

do_clean:
	-@rm $(OBJ_DIR)/*.d $(MUTE_CLEAN)
	-@rm $(OUTPUT_DIR)/$(TARGET) $(MUTE_CLEAN)
	-@rm $(OBJS) $(MUTE_CLEAN)
	make -C ./wsport $(MAKECMDGOALS)
	make -C ./sslport $(MAKECMDGOALS)

sync:
	bash ./sync-up.sh

.PHONY: sync
