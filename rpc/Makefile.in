include ../Makefile.init.pub
C_INCLUDE += -I../ipc

TARGET:=librpc.so
SOURCES:= ldbal.cpp dbusprxy.cpp prxyfdo.cpp fdodrv.cpp \
	tcpport.cpp stmpdo.cpp tcpfido.cpp reqfwdr.cpp \
	rpcroute.cpp bridge.cpp dllexp.cpp \
	fidodrv.cpp stmrelay.cpp tcportex.cpp stmpdo2.cpp \
	multihop.cpp streammh.cpp

OBJS:=$(SOURCES:%.cpp=$(OBJ_DIR)/%.o)

all: $(OUTPUT_DIR)/$(TARGET) SSLPort WSPort Security Router
debug: $(OUTPUT_DIR)/$(TARGET) SSLPort WSPort Security Router
release: $(OUTPUT_DIR)/$(TARGET) SSLPort WSPort Security Router

$(OUTPUT_DIR)/$(TARGET) : $(OBJS)
	@if [ ! -d $(OUTPUT_DIR) ]; then mkdir -p $(OUTPUT_DIR);fi
	$(CC) -o $(OUTPUT_DIR)/$(TARGET) $(OBJS) -L$(OUTPUT_DIR) -lcombase -lipc -ljsoncpp -ldbus-1 -shared $(LINKER_OPTION)

SSLPort:
	$(MAKE) -C ./sslport

WSPort:
	$(MAKE) -C ./wsport

Security:
	$(MAKE) -C ./security

Router:
	$(MAKE) -C ./router

-include $(OBJS:%.o=%.d)

debug_clean: do_clean
release_clean: do_clean

clean:
	$(MAKE) debug_clean
	$(MAKE) release_clean

do_clean:
	-@rm $(OBJ_DIR)/*.d $(MUTE_CLEAN)
	-@rm $(OUTPUT_DIR)/$(TARGET) $(MUTE_CLEAN)
	-@rm $(OBJS) $(MUTE_CLEAN)
	$(MAKE) -C ./wsport $(MAKECMDGOALS)
	$(MAKE) -C ./sslport $(MAKECMDGOALS)
	$(MAKE) -C ./security $(MAKECMDGOALS)

sync:
	bash ./sync-up.sh

.PHONY: sync Security WSPort SSLPort
